

{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "GeoWS UnFunded DMSP",
    "description": "A demonstration service showing access to NGDC (now NCEI) DMSP files via a GeoWS style web service.",
    "termsOfService": "TBD",
    "contact": {
      "name": "GeoWS Building Block",
      "email": "geows@iris.washington.edu"
    },
    "license": {
      "name": "Data provided under GNU Lesser General Public License",
      "url": "http://www.gnu.org/licenses/"
    }
  },
  "host": "geows.ds.iris.edu",
  "basePath": "/geows-uf",
  "schemes": [
    "http"
  ],
  "paths": {
    "/dmsp/1/query": {
      "get": {
        "tags": [
          "NGDC next-web DMSP File Request"
        ],
        "summary": "Get DMSP file list, extents, or data request",
        "description": "<p>The <strong>dmsp</strong> service provides query access to the DMSP catalog service using content type of files or extents. After determining the desired data from a catalog query, a request to prepare the data for download can be made by changing the content type to data.</p> <p>This web service can provide catalog data in a text format like the web application at <a href='http://www.ngdc.noaa.gov/next-web/docs/guide/catalog.html#dmspCatalog'>NGDC DMSP Catalog Service</a></p><p>When ready to order data, set the content type to data and this service will place an order as described here <a href='http://www.ngdc.noaa.gov/next-web/docs/guide/ordering.html'>NGDC Ordering Data API</a></p>",
        "operationId": "getData",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "required for data download - indicates the recipient for messages from NGDC next-web REST ordering service",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "content",
            "in": "query",
            "description": "<strong>files</strong> provides a list of files that may be retrieved with the respective query parameters. <strong>extents</strong> provides an estimate of total size for the respective query parameters. <strong>data</strong> will cause a request to be made for the respective query parameters",
            "required": true,
            "type": "string",
            "default": "files",
            "enum": [
              "files",
              "extents",
              "data"
            ]
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "start time for desired coverage",
            "required": true,
            "type": "string",
            "default": "1999-01-01T00:00:00"
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "end time for desired coverage",
            "required": true,
            "type": "string",
            "default": "1999-01-02T05:00:00"
          },
          {
            "name": "satellite",
            "in": "query",
            "description": "Case sensitive ID, e.g. F12 or F13, etc.",
            "required": false,
            "type": "string",
            "default": "F13"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "A point of desired coverage",
            "required": false,
            "type": "number",
            "default": "0",
            "maximum": 180,
            "exclusiveMaximum": true,
            "minimum": -180,
            "exclusiveMinimum": true
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "A point of desired coverage",
            "required": false,
            "type": "number",
            "default": "-10",
            "maximum": 90,
            "exclusiveMaximum": true,
            "minimum": -90,
            "exclusiveMinimum": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request, and error messages releated to client interaction with WebServiceShell"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "500": {
            "description": "Internal Server Error, and error messages related to handler operation or WebServiceShell configuration"
          }
        },
        "security": [
          {
            "TBD_auth": [
              "write:writeTBD",
              "read:readTBD"
            ]
          }
        ]
      },
      "head": {
        "tags": [
          "NGDC next-web DMSP File Request"
        ],
        "summary": "Get DMSP file list, extents, or data request",
        "description": "<p>The <strong>dmsp</strong> service provides query access to the DMSP catalog service using content type of files or extents. After determining the desired data from a catalog query, a request to prepare the data for download can be made by changing the content type to data.</p> <p>This web service can provide catalog data in a text format like the web application at <a href='http://www.ngdc.noaa.gov/next-web/docs/guide/catalog.html#dmspCatalog'>NGDC DMSP Catalog Service</a></p><p>When ready to order data, set the content type to data and this service will place an order as described here <a href='http://www.ngdc.noaa.gov/next-web/docs/guide/ordering.html'>NGDC Ordering Data API</a></p>",
        "operationId": "getData",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "required for data download - indicates the recipient for messages from NGDC next-web REST ordering service",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "content",
            "in": "query",
            "description": "<strong>files</strong> provides a list of files that may be retrieved with the respective query parameters. <strong>extents</strong> provides an estimate of total size for the respective query parameters. <strong>data</strong> will cause a request to be made for the respective query parameters",
            "required": true,
            "type": "string",
            "default": "files",
            "enum": [
              "files",
              "extents",
              "data"
            ]
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "start time for desired coverage",
            "required": true,
            "type": "string",
            "default": "1999-01-01T00:00:00"
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "end time for desired coverage",
            "required": true,
            "type": "string",
            "default": "1999-01-02T05:00:00"
          },
          {
            "name": "satellite",
            "in": "query",
            "description": "Case sensitive ID, e.g. F12 or F13, etc.",
            "required": false,
            "type": "string",
            "default": "F13"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "A point of desired coverage",
            "required": false,
            "type": "number",
            "default": "0",
            "maximum": 180,
            "exclusiveMaximum": true,
            "minimum": -180,
            "exclusiveMinimum": true
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "A point of desired coverage",
            "required": false,
            "type": "number",
            "default": "-10",
            "maximum": 90,
            "exclusiveMaximum": true,
            "minimum": -90,
            "exclusiveMinimum": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request, and error messages releated to client interaction with WebServiceShell"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "500": {
            "description": "Internal Server Error, and error messages related to handler operation or WebServiceShell configuration"
          }
        },
        "security": [
          {
            "TBD_auth": [
              "write:writeTBD",
              "read:readTBD"
            ]
          }
        ]
      }
    },
    "/dmsp/1/version": {
      "get": {
        "tags": [
          "NGDC next-web DMSP File Request"
        ],
        "summary": "Get version of service",
        "description": "<p>The <strong>wssversion</strong> service provides the version number of this service)",
        "operationId": "getVersion",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "406": {
            "description": "Not Acceptable - look at Accept headers, WebServiceShell only returns text/plain here"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "TBD_auth": [
              "write:writeTBD",
              "read:readTBD"
            ]
          }
        ]
      }
    },
    "/dmsp/1/wssversion": {
      "get": {
        "tags": [
          "NGDC next-web DMSP File Request"
        ],
        "summary": "Get version of WebServiceShell",
        "description": "<p>The <strong>wssversion</strong> service provides the version number of this WebServiceShell (WSS))",
        "operationId": "getWssVersion",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "406": {
            "description": "Not Acceptable - look at Accept headers, WebServiceShell only returns text/plain here"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "TBD_auth": [
              "write:writeTBD",
              "read:readTBD"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "TBD_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://TBD/api/oauth/dialog",
      "flow": "implicit"
    }
  }
}
